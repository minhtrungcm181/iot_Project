/*
 * MCU_Python_communication.c
 *
 *  Created on: Mar 30, 2023
 *      Author: Trand
 */

#include "MCU_Python_communication.h"
#include "main.h"
#include "timer.h"
#include <stdio.h>
#include <string.h>

typedef enum {
	IDLE,
	REQUEST_PROCESSING,
	CONFORM_WAITING
} System_State;

extern uint8_t request;
extern UART_HandleTypeDef huart2;
extern uint8_t str[10];
extern GPIO_TypeDef * LED_Port[];
extern uint16_t LED_Pin[];

System_State state = IDLE;
uint8_t cmd0[] = "check";
uint8_t cmd1[] = "!OK#";
int resend = 0;
uint8_t Data[15];

int strsim(uint8_t* str, uint8_t* cmd, int len)
{
	if (strlen((char*)str) != len)
		return 0;
	for (int i = 0; i < len; i++)
	{
		if (str[i] != cmd[i])
			return 0;
	}
	return 1;
}

void fsm()
{
	switch(state)
	{
	case IDLE:
		// LED Blinking
		if (get_flag(0))
		{
			HAL_GPIO_TogglePin(LED_Port[0], LED_Pin[0]);
			setTimer(0, 2000);
		}

		// Change state
		if (request)
		{
			request = 0;
			state = REQUEST_PROCESSING;
		}
		break;
	case REQUEST_PROCESSING:
		if (resend || strsim(str, cmd0, 5))
		{
			HAL_UART_Transmit(&huart2, Data, sprintf((char*)Data, "HelloWorld\r"), 3000);
			state = CONFORM_WAITING;
			resend = 0;
			setTimer(1, 3000);
			HAL_GPIO_WritePin(LED_Port[0], LED_Pin[0], SET);
		}
		else
		{
			HAL_UART_Transmit(&huart2, Data, sprintf((char*)Data, "Error RQ\r"), 3000);
			state = IDLE;
		}
		break;
	case CONFORM_WAITING:
		if (get_flag(1))
		{
			if (strsim(str, cmd1, 2))
			{
				state = IDLE;
				setTimer(1, 0);
			}
			else
			{
				state = REQUEST_PROCESSING;
				resend = 1;
			}
		}
		break;
	}

}
